steps:
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/cloud-442509/my-repository/spring-boot-app:latest', '.']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/cloud-442509/my-repository/spring-boot-app:latest']


  # Step 3: Deploy to Google Kubernetes Engine (GKE))
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      [
        'container',
        'clusters',
        'get-credentials',
        'spring-boot-cluster',
        '--zone',
        'us-central1',
        '--project',
        'cloud-442509',
      ]
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      ['apply', '-f', 'resources.yaml']
    env:
      - 'CLOUDSDK_CONTAINER_CLUSTER=spring-boot-cluster'
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1'

  # Step 5: Expose the application via a LoadBalancer using service.yaml
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      ['apply', '-f', 'service.yaml']
    env:
      - 'CLOUDSDK_CONTAINER_CLUSTER=spring-boot-cluster'
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1'



options:
  logging: CLOUD_LOGGING_ONLY
