steps:
# Step 1: Build the application using Maven
- name: 'gcr.io/cloud-builders/mvn'
  args: ['clean', 'package', '-DskipTests']

# Step 2: Build Docker image and push to Google Container Registry (GCR)
- name: 'gcr.io/cloud-builders/docker'
  args:
    - 'build'
    - '-t'
    - 'gcr.io/$PROJECT_ID/cloud:$SHORT_SHA'
    - '.'

# Step 3: Deploy to Google Kubernetes Engine (GKE)
- name: 'gcr.io/cloud-builders/gcloud'
  args:
    - 'container'
    - 'clusters'
    - 'get-credentials'
    - 'YOUR_CLUSTER_NAME'
    - '--zone'
    - 'YOUR_CLUSTER_ZONE'

- name: 'gcr.io/cloud-builders/kubectl'
  args:
    - 'set'
    - 'image'
    - 'deployment/cloud-app'
    - 'cloud-app=gcr.io/$PROJECT_ID/cloud:$SHORT_SHA'
    - '--record'

- name: 'gcr.io/cloud-builders/kubectl'
  args:
    - 'apply'
    - '-f'
    - 'kubernetes/deployment.yaml'

- name: 'gcr.io/cloud-builders/kubectl'
  args:
    - 'apply'
    - '-f'
    - 'kubernetes/service.yaml'

# Step 4: Output the External IP of the Service
- name: 'gcr.io/cloud-builders/kubectl'
  args:
    - 'get'
    - 'service'
    - 'cloud-service'
    - '--output'
    - 'jsonpath={.status.loadBalancer.ingress[0].ip}'
